<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAiYAAAImCAYAAABnzkFGAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAAAHdElNRQfgChUPIDBP5l0dAAAdHUlEQVR4Xu3d0XnUOtcG
        0K8ESqAESqAELlIAJVACHVDClEAJlMB9biiBEv5/9pGGQOJMPGN7W5bWep736uRkPGZHkm1J/h8AAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC3Oz1+POfLOadzfpzz65z/eyPxM/Gz8f98Pedj/W0AADc4PX44JwYiMbCYGnQsSfzO+N0f6qcBADxz
        enxXBwxz7oaslfis+Mx39SgAgKGdHt+fE49bpgYOmYljeF+PCgAYSjsDkucxQAGAYZRHNjEZdWpQ0FK+
        neMRDwB0q6yuyZxDsjRxrFbzAEB3yh2Iqc7/CHH3BAC6UOaS/Kwd/JET38HcEwA4rLIfye/asfeQ+C72
        PwGAwzk9fq4d+VQHf+TEd/pcvyUA0LwyKJnq1HuKwQkANG+MQcklBicA0Kz+5pS8FXNOAKBJZfXNSIOS
        S+I7W60DAE3pY0nwvYnvbp8TAGjCsTdPWyvf6tkAAHZTtpmf6qhHjO3rAWA35YV8R3r3zdaJc+GRDgDs
        wiOcqXikAwDpyiqcqY5ZrNIBgGSnx9OzzliecqpnCQDYnLslc+KuCQCkcLdkTtw1AYDNlZU4Ux2xvIwV
        OgCwqdPjl2edr7yeL/WsAQCbsG/JLflVzxoAsLry9uCpDlhej7cPA8AmPMa5Jx7nAMAmTo8/nnW68nZ+
        1LMHAKxquuOVtwIArMxbhJfEW4cBYFXmlyyJeSYAsCq7vS6JXWABYFUmvi6JCbAAsKrT4+9nna3Mz+96
        FgGAVUx3uDI3AMCKpjpbmR8AYEVTna3MDwCwktPj+xcdrdwWAGAlBibLAwCsaKqzlfkBAFY01dnK/AAA
        K5rqbGV+AIAV2WBtSX7VswgArMKW9EtiS3oAWJWX+C2Jl/gBwKri1f3Tna68nS/1LAIAqzg9fnzW2cr8
        fKxnEQBYzXSnK28FANiACbD3xMRXANiEeSb3xPwSANjE6fHDs05X3s6HevYAgNXFZmHTHbC8jI3VAGBT
        HufcEo9xAGBTp8d3zzpfeT3v6lkDADZjF9g5sdsrAKQ4Pb5/1gnLy7yvZwsA2Jy7JtfibgkApHLX5Frc
        LQGgYQ+nj+d8Oed0zo9zfp3zfzPy85z4+a/nfD6nrT0xTo9fn3XIcnr8Vs9OO3qtPwBmeji9Pyc6gmjU
        pxr8Jfl9zvdzoqPYd9VHWaFjX5OnxLnYfyXOKPUHwBXRSJfOIK4ypxr0rRKdxKd6FPm8dfjv7PcW4VHr
        D4BnytVp3CKfarQzE7fno2PKv4qNxxfTHfVI2ecRjvoD4D/tdAjPE7fav9ajzHN6/Pmsox4p8d1zO2T1
        B8B/yi3zmAw41Si3lLiCzbvFXlbp/K4d9UiJ75y3Ckf9AfBHWd0wd0VDK4k5ADlX8+XtwyMNTuK75q1U
        UX8A/HGMq9TXErfXcyZmnh4//9Vx957P9VtvT/0B8J9y63yLZZd7JOfZ/xiDk5xBifoD4I/YUOp4t87f
        SkyY3P7Wehmc9PhYJ75T1qBE/QFQlU4hbkFPNa5HT+x1kTE46W3OSd6cEvUHwB99dwqXZA1OYrVOD0uJ
        4zvkrL5RfwD8MUancEle53DsTdji2HPOk/oD4I+xOoVLvtdvv72yff2R3q0Tx5q3mkT9AfBHXLmVK7ip
        xrP35G2nXl78d4S3EufdJQnqD4B/lI2gphrNUZK7S2eZe3Kqg4CWEseUt5PrhfrL2xMGoHnl5WNTjeVI
        iUcI+R1yOwOUfQYkQf1F9qk/gOaU5/pTDeWI+VHPSr7yiOfLOZlzUOKz4jP3m4Cp/v7OfvUH0Ix+dtVc
        K1/qmdlP2f8kBgw/zpkaUCxJ/M743XnvuLlG/T3P/vUHsJt4rl0aQ3lK3FJvawlnWc0Tg4l43BIDizl3
        VeJn4mfj/4n/t713tai/qbRXfwApyiqI0ZZmzs2pniW2ov6uRf0BAzr221ozYiLiltTfW1F/wEBcrc6J
        q9atqL85UX/AQCzPnBtXrVtQf3Oj/oBB9Pcq+a3ytZ4x1qT+5kb9AQN4OH2sjZ68nV/1rLEW9XdL1B8w
        gHh2XRo9mZf2ltkemfq7NeoP6JxJh7fGC9bWpP5ujfoDOuY2+j1xO30t6u+eqD+gY3H1VRo7uS1tbN9+
        dOrv3qg/oFPeS3JvvL9kDerv3qg/oFNPDZ3cFptdreHpfMptUX9Ah7xefkl+1rPIvdTfkqg/oEPe5Los
        LKP+lgWgO16atjS2B19C/S2N+gM6Y0XE0tjoagn1tzTqD+iMFRFLo2NYQv0tjfoDOqNjWBpLNpdQf0uj
        /oDO6BiWxptel1B/S6P+gM7oGJZGx7CE+lsa9Qd0RsewNDqGJdTf0qg/oDM6hqXRMSyh/pZG/QGd0TEs
        jVURS6i/pVF/QGceTt9rAyf3RcewhPpbGvUHdCZuBZcGTu6LV88vof6WRv0BnYl9EEoDJ/eEZdTfsgB0
        J24FXxo5uTW/6lnkXupvSdQf0KGH07vayMnt+V7PIvdSf0ui/oBOPZx+1oZOboulmmtQf/dG/QGdejid
        akMnt8WKiDWov3uj/oBOPZw+1YZO5ud3PXsspf7uifoDOuY5/z3xfH8t6u+eqD+gcza6ujWf65ljDerv
        1qg/oHPR0JUGT97O73Pe1TPHGtTfLVF/wCBKgzfVEMq/OdUzxprU39yoP2AQD6dvteGT67EN+BbU39yo
        P2AQD6f3teGT1/Ojni3Wpv7mRP0Bg7GnxFuxd8SW1N9bUX/AYFy1Xour1a2pv2tRf8CgvIr+tXi2n0H9
        vRb1BwyqbHj1qzaGUvKtnp12lDfzfjknHn/8OGfuv1m8myZ+PgYAsUy3rQ5P/U2lvfoDSGWb8L/Txr4R
        5TFHDERiUDF1nEsS3zE2OYuBSgvfVf09xb4lAP8xEfGST/WM5Ct3D2Iwkv0G3hik7Pe9g/q7ZN9/B4Bm
        uKUe2ecWerk70kLHHP/+MTDKv2JXfxGPcAD+EfMPxt2R82c9C3naGZA8T9TA13qUedQfAC+M+R6TuFLP
        u0tQ7g4cYTVKnJfcRwvqD4AXxuoc4go9b6VKWV1ztEcWMQclc+Cm/gB4psw1mGpIe0r2oOTIe3bEucrb
        iVT9AfBC31eueZ1CeXSzxbLfPZI390T9AfBCn51D5qAkJnT2ttokJuzmPNpRfwBXlE4mbjFHwzznCjh+
        Jn42/p/jNkRlA6xoTKe+49ESe4Rkdao9rzLJPI/qrwWjtn/QnNIoxh/XGg1j/I74XcfbRKksbc3e+Gvt
        nOq32V7fg5JLMgcn6m8P2j9oRDS2ZaLilrfg43fHZxzn6qmcl6N2Dl/qt9jeGIOSSzIHJ+ovg/YPGlP+
        WDI7lfis/M2s7nXMzuFzPfrtjTUoueR7/fbbU3/b0v5BQ/bfXyI+O2855hLH6hwyByVHvqJfmrzt1NXf
        +rR/0JDSyH07Z+qPZY/EsbR/e/MYnUPuu0fKRmRTxzFKDAL/TfvvvtH+QWPanVAXx/S+HmW7yvlr9bFF
        3uOFUFYeTB3HSIlayKtb9beM9g8a0/5cgDi29pfYlVn7U8e/Z+K2cN5VV6mlqeMYMT/qWcmh/u6j/YPG
        tP9HeclRBict3QqO5J6zeXs6jJTcFSij19+ttH/QmOP8UV7S/h9neU6958S5v5M7wz/mVZTPladEzWbe
        sRq3/m6l/aNJ5bliNKax0c2154vx3+Jn4mf7eN7X9jPpa4ljbvvfoMzqnzr2zPyqR5OjdIhHrKeM5G4m
        NmL93Ur7t7/ybzBm/zup/OEuWTUQ/+9xl3OVTuRaIbSeOPbWn1vv/Ugjd0fJsufD1HFISW6DOlr93UL7
        t6/R+98XyglZ8w82ftfxTlB7z6HvSdvLD0utTR13RrInXbpb8nZGumuSW3+30v7tQ/87YdtijN99jBHs
        vg3W2mm7KNf9I7wluefF8uC5GeWuSbt/l9q/feh/n8m7bXeM22vtTIxbI60/x96jEcw/J33V1JbJnow8
        Rv3dQvuXS/87IX/WdXxWu7Om+5wH0PrM/+yGMHfb776uQLfOCIPGdred1/7l0v9OKCO1PZ57x2e2N3Lb
        73xsnTbP90X+Y47cc1Fmy08dh0yn98dsbf4tav9y7Xe+2+4PzgeXcfvotbR3W6nPq4VLWr5qiCVxU8e8
        RfK3/u6zsd8y2e8s6rv+5tL+5dL/Tth2os3ctDVruq9nq8/T+nPtrD9Sj3Hazx6Pc/qsv1to//Lofye0
        1Vi2MWu6zXdorJ2W903IulrLvUpoowE6YnKfg/daf3Np//Lof1+x3xK5qbSxnn+MeQC5+0TcIueP9Wf9
        tDxt/a0dKdnvz+mz/ubS/uXR/05oa7R2yf6jtjHmAfyu37ZNT8e5VfIbpqfPltvS479VyxcG2r8M+t9X
        LNvmdqvsOyGsLNmaOq4e0/JS7a2f82dfhY9UV2tnj7tbfdXfXNq/PPrfCbmzz2/Nfi8eyl8uuGfabBzD
        9n+02ctQvUl4SbL1Vn9zaf9y6H9f0XZDud9s9TGer17S8u3krScg9jqhstdkb0/fV/3Npf3Lof99RdsF
        uGfBjDRBsd2Xh23dMWSzImdpsu9w9VV/c2n/cuh/X7H9M9Ql2W/G+tMxjJFWbT0xLNtYDf4WyR6Y9FV/
        c12Ob5TsRf/7iqeDaDN7uXz+KGmVgYn8m76WDLfqcnyjZC+Xz281u7kcQKvZy+XzR0mrDEzk3/T1puFW
        XY5vlOzl8vmtZhex4+DlAFrNHo5wXtZOqwxM5N8YmGS4HN8o2cvl89vNDrsSt71UqWQPRzgva6dVBiby
        bwxMMlyOb5Ts5fL5rWY3lwNoNXu5fP4oaZWBifwbA5MMl+MbJXu5fH6r2c3lAFrNXi6fP0paZWAi/8aq
        nAyX4xsle7l8fqvZjeVK056OYYy0qr+BSYvbTx8pBiYZLsc3Svai/32FDV6mjXVl2/IGa9vujJht6w27
        +k/2Tr191d9c2r8c+t9X2BJ3WtsFs3Z2LMA3bN+RZ1+Bj/QOkvWTrbf6m0v7l0P/+wovEZrmJVZt2H4L
        974eDfSdX/Us5umt/ubS/uXQ/17htcsvee13G7a/pZy9ymO8PXLWS36b0Fv9zaX9y6P/fUWbV3H7X0k8
        nH7XY+k5v+u3bdP2/wZ7dHYtT3hrOfmdeI/1N5f2L4f+94q2Jju1MRlzjOesLc8vybhq2+PxwEjP79dM
        9mO3PutvLu1fHv3vK9oatbUxWns4farH03M+1W/bnrzn3LnPUseoq7WTf2Xba/3Npf3Lo/+9YvuJXnPy
        rR5NG+KKphxXj2n3ai3kPXvNfmOteSa3Z49Hbn3W3y20f3n0v1fs+/x7xw1dXrH9csE90+bEu5Dbeffc
        6fWS3KWLvdffXNq/XHv3v7u8tG+O8ge5xyg5Jlq1d1LK+ehxElib5/sif31/9uOclvcvaC35tdp7/c2l
        /ctVzrf+d1KZ9JV5cuKktLxktcerhnbvloT8yWD5t9P7bPC3SP4ExRHqby7tXy797xVl5JZxW6nh20d/
        2WcUu1Van1uyx6ZDe6zOaeGZ8hGSvQ39GPV3C+1fLv3vG7ZtPBudaDOhrVnTS9PYrOtn9lummD2PoeVd
        H1tJ/tLFUervFtq/feh/ryhFueatzfhdxymOiz6ucNsuxn076z3umtjT5Hpy24nR6u8W2r996H/fUE7Q
        ktUE8f8e+4Tk3F7bKu3fttu/o3bXpJ2MdLfkknbvmgTt3370v28ojWnMWo8/4muFGv8tfiZ+ts1Z57cq
        3/2IkxbjmNv+Nyh/eFPHnpl4lp7bePU5uXCNZM8tGbP+bqH921/Ux6j9L1eUWdNH+uOMY21/1vX1P7LM
        5M7YLw1NT5ML10j+LfdR6+9W2j9o1HH+OI8yKGntrkH21bpt6p8SNTv6Xau2/2a1f9Co9v84jzIoaeEW
        +vPs8Uhn7/kNrST3/SXq7z7aP2hUeebayi3gvxPH1P5zxfIYo9XGLXercI90IrmPcNTfMto/aFhbS+ni
        WNq+2gqlU2ixUfs72fNNjvb8fs3kvivrGPV3jOWt2j9oVLklvOcVb3z2cZaDrbs2f8tkLyHOfk9LC9nj
        0Zn6W5P2DxpWJtJlXvXGZ7U9k/+5482nMDjZLlG/2ZON1d9WtH/QqHKbOP5At7yCiN8dn3Gc25blvBz1
        lf/Zg5Mv9XN7Tu6gRP3l0P5B48pS0LhCW+MqIn5H/K7clQtrKI1V68/030r25Mye75zsMShRf9m0f9C4
        MrkxroTjj2vOM+74mfjZ+H+Ou/StfO81GqYWEv8meVdpfQ5Osgcl6q8Fo7Z/QGP67FjjyjuzY42rzl46
        1jh3BnbLklt/AN3wKGI97e4ZcUtO9dvkUH8A/NF3p3BJ9uDkyPMkvtRvkUP9AfDHGJ3CJQYnb8dy6+1i
        cAJwVZkPMdWA9pxYupg5b+JIg5PsQYn6A6CKK7dyBTfVePYeW6q/TPbyavUHQHXMRwxrJ7sjjgmxrXbE
        e7wEUf0BUJX9BqYay9GS+76ONh9d5D9aiE65fPbo8b4YgHNjOOJz/deiU86ejKn+/o75JsDgyi30aAyn
        GslRk/1Ip6V/g9wXqqm/qXikAwysvEhrqnEcPdl3DeK181PHkZlf9WjyqL/XYgkxMKAy+XKqUZR4z0e2
        ee8f2TK5L1dTf9eSX38AuzPh9a1kT4Td867JHgMx9Xc9JsICA3G1Oicj3TXJHoSpv7fjrgkwEMsz52aE
        uSZ7zC1Rf/NirgkwiHF32Lw1uW/UDfmrVHK3nQ/qb27y6w8g3VgvSVua3/Ws5Yk3+ZbPzkr2vi3qb35i
        AGdfE6Bzsd14afRkXrJfZJc5/yJ36/mg/m5N/h0tgDRlQ6upxk9ezx6dd9Z7Y7IHXerv9uTXH0Aa23/f
        kz0e52RtPJb9GEf93Z78+gNIY++Ie9Pjnib5r9pXf/fGniZAp7xa/t7kvkMmPH32VtljxZH6uy/59Qew
        Oc/3l6THeSZf6iflefpsuS3mmQAd2mfzrl6yxyZkW69eGWnL/aMnv/4ANpe/P0Zfybb9BNjsXW3V35IA
        dMcr5pcmuyPf9t8rm/pbGtvTA53Z/tFA7+nr0Uc29bc0VuYAndnvzbW9xMBkCfW3NAYmQGd0DEuTu2TT
        wET+jSXDQGd0DEtjYLKE+lsaAxOgMzqGpTEwWUL9LY2BCdAZHcPSGJgsof6WxsAE6IyOYWlyd0o1MJF/
        k79TL8CmdAxLY1XOEupvaazKATrzcPpWGzi5L9kDk8/1c7dJNvW3NAYmQGfiGXVp4OS+vK9nMsf2/17Z
        Ay31tyy59Qewua2vwHtPtu3vMPR1B6j3AHQnOqJLIye35mc9i3m2n5ORvcroQ/1cuT359QeQ4qmhk9ty
        qmcwz8Ppd/3srfK9flKep8+W25JffwAprIy4N9lLhTPuLvyqn5ZH/d0bS4WBTlkZcW9yXzkfHVH53K2T
        PaFX/d2X3PoDSGOeyT3Z487C9/rZW6evTeP6TH79AaTafu5Cb8l9vv9welc/NyN7zDNRf7fF/BKgc9HQ
        lQZP5qX3ZbXZj3PU322xsRrQObfTb8kIE0Q9zmk3HuMAg4gGrzR8cj3Ze328r5+bmT0GX+pvXrxRGBhE
        3qqPo2eUxxyf6xHkUH9zYxt6YBBlgqVJiNeTPel1j7sll+TeNVF/c2LSKzAYL1V7K6NNCs2+a6L+rsfd
        EmAwrlqvJftuSQsTQmPex7t6RNtTf9fibgkwKG98nUp0lnkddIiXtJXP3jvZk33V38vk1x9AU7y/5Hmy
        l8+29kgje/t99fdvvBcHGJzX0f+dH/Ws5GhzT4/sRzrq7ym59QfQLMs3I3ELPW/CYdtzLHK3qld/kdz6
        A2he3ovjWk3eqpQyKGllXslr+VaPNof6y10VBdC8Y3SWWyW7Ez7KvAqDtZzk1h/AYZTn/a0+Xtgq2Y8t
        jvYSu8zBifoD4JmxOoe4Qs+Z6FnuCBz1cYXByTbJqz+AQxujc8gelBz9MUXe4wb1B8ALfXcOmYOSns5j
        zI1x3pbHoATgLn12DjHHI6tz7XFn0+hUczZhU38AvBCN6PEfQ1ySt+V6n4OSS2KwkDU4UX8ATIg5BqVx
        PWKiI/1Yv8n2+h6UXJI3OAnqD4AXyhbqsWX5VOPbamIlTN6t8zEGJZdkD07UHwDPlFvrrb14birRgX2q
        R50jPq989kjJfreO+gNgQrzXo83NwuIqPv9Zfp8TNefmZz0LedQfAJPa6SDiCjWupPNvm5er+F4maN6b
        fbZVV38ATCqdc7wlNruDjmf4+94yb/PKfY/sN8Fz5PoD4A3lKjY6iS1eVhe3yqMziEmm+1+djjmv5LXk
        zjd5zUj1B8AdymqK6CjizkJ0FtGBTTX6zxNXv/HzcYs8OoK8FSBzlKv0ud9llLT3ptxe6w8A/lE6rKkO
        bfTowAEgVXlcMNUpS9xlAAASmfD6Vux0CgAp3C2ZE3dNACDFsd/bkhlzTQBgc+Pu8HprTvWMAQCbGOsl
        fUsTAzh7fQDAZsrmWlOdsEzncz1zAMCqyoZqU52vvJ7v9ewBAKuy/fw9+V3PHgCwKnuX3Bt7mgDA6vLf
        XNtLvtYzCACswvySJTHPBABWVd5QO9Xpytv5Vc8iALCK8tr8qU5X5gQAWFHMk7h0snJPbE8PAKuxsdrS
        WJkDAKuJt+WWDlbui4EJAKzGwGRpLBkGgNUYmCyNgQkArMbAZGkMTABgNQYmS2NgAgCrMTBZmi/1TAIA
        ixmYLI1VOQCwmofTt9rByn0xMAGA1dj5dWne1zMJACz2cPpcO1i5JwDAirxdeEl+1rMIAKzmqaOV23Kq
        ZxAAWI2VOffGUmEAWJ2VOffmQz2DAMBqzDO5J7/q2QMAVvdw+l07XJkX80sAYDPR0ZYOV+bFxmoAsBmP
        c26JxzgAsLnocEvHK9fjjcIAsLlY/lo6Xrke29ADwOYeTu/OMQn2ekx6BYA0Xur3VtwtAYA07ppci7sl
        AJDOG4enEoO1d/UMAQCpvD/nebwXBwB2E++BKR2yxCANANiZ5cOReIRjwisANOHh9L120KPmcz0TAMDu
        yiqdn7WTHi3f6lkAAJpR5puMtoT4e/32AEBzxhqcxB0iS4MBoGljDE4MSgDgMPoenBiUAMDh9Dk4OZ1j
        UAIAh9TXap2v9VsBAIcWS2pL537ExF2fj/WbAABdiM794fTrnKnOv9XExnEe3QBAl8qjna/nTA0CWkoM
        oD7VowYAuhbvlSkTSacGBXsmHtuYSwIAQ2pngBJ3SOJlhB7bAMDwyiOeGBhkr+CJOSQe2QAAryh3UWKQ
        8uOcqcHEksSjmhiMfD7H3REA4EZlNU8MVOKRTwxW5q7sibsv8fMx2TYGIh/qbwQAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGCO//3v/wFk
        fWAcoDZWIQAAAABJRU5ErkJggg==
</value>
  </data>
</root>