<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>